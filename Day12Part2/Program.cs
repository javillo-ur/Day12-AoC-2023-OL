Console.WriteLine(File.ReadAllLines("input.txt").Select(r => new{line = Enumerable.Range(0, 4).Aggregate(r.Split(" ")[0], (previous, current) => previous + "?" + r.Split(" ")[0]).Select((c, i) => new{character = c, index = i}),groups = Enumerable.Range(0, 4).Aggregate(r.Split(" ")[1], (previous, current) => previous + "," + r.Split(" ")[1]).Split(",").Where(t => int.TryParse(t, out _)).Select(t => int.Parse(t)).ToList()}).Select(r => new{count = r.line.Count(), line = r.line.Aggregate(new List<Tuple<int,bool>>(), (previous, current) => current.character == '#' ? [.. previous , new(current.index, true)] : current.character == '?' ? [.. previous , new(current.index, false)] : previous).ToDictionary(t => t.Item1, t => t.Item2), groups = r.groups.Select((g , i) => new{ g, i }).ToList(), cache = new Dictionary<(int,int), long>()}).Select(r => Enumerable.Range(0, r.count).Aggregate<int, Func<int,int,Tuple<long, bool>>>((i,j) => new(0,true), (previous, current) => (int index, int groupindex) => (index >= r.count-1 && groupindex < r.groups.Count - 1) ? new(0, true) : (groupindex >= r.groups.Count) ? new (1, true) : (r.cache.TryGetValue((index, groupindex), out var a) && a != -1) ? new (r.cache[(index, groupindex)], true) : new List<int>(){r.line.Keys.FirstOrDefault(t => t >= index && r.line.Keys.Where(w => w < t && w >= index).All(s => !r.line[s]) && Enumerable.Range(0, r.groups[groupindex].g).All(s => r.line.ContainsKey(t+s)) && (!r.line.ContainsKey(t + r.groups[groupindex].g) || !r.line[t + r.groups[groupindex].g]) && (groupindex < r.groups.Count-1 || r.line.Keys.Where(k => k > t + r.groups[groupindex].g).All(t => !r.line[t])), -1)}.Select(j => j == -1 ? new (0, true) : r.line[j] ? previous(j+r.groups[groupindex].g+1, groupindex+1) : new List<Tuple<long,bool>>(){new(new List<Tuple<long,bool>>(){previous(j+r.groups[groupindex].g+1, groupindex+1), previous(j+1, groupindex)}.Sum(t => t.Item1), true)}.Select(t => new Tuple<long,bool>(t.Item1, r.cache.TryAdd((index, groupindex), t.Item1))).First()).First())(0, 0)).Sum(t => t.Item1));